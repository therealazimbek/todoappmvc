@model ViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="top">
    <h1>Lists</h1>
    <div class="btn-group">
        <a asp-action="Create" class="btn btn-success">Create new list</a>
        @if (!Model.ShowHidden){
            <a asp-controller="Lists" asp-action="Index" asp-route-showHidden="@Model.ShowHidden" class="btn btn-primary">Hidden lists</a>
        }
        else {
            <a asp-controller="Lists" asp-action="Index" asp-route-showHidden="!@Model.ShowHidden" class="btn btn-secondary">Hide lists</a>

        }
    </div>
</div>

<partial name="TodayListStatic"/>
<br />  

<ol class="list-group list-group-light list-group-numbered">
    
    @foreach (var item in Model.ToDoLists.Where(l => l.Name != "Today"))
    {
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">
                    <span class="badge badge-primary rounded-pill">@Model.ToDoItems.Count(i => i.TodoListId == item.Id && i.Status != ToDoAppModel.ItemStatus.Completed)</span>
                    <a asp-action="Details" asp-route-id="@item.Id">@item.Name</a>
                </div>
            </div>
            <div class="btn-group">
                @if (item.IsHidden == false) {
                    <a href="@Url.Action("Hide","Lists", new { id = item.Id })" class="btn btn-outline-warning">Hide</a>
                }
                else {
                    <a href="@Url.Action("Hide","Lists", new { id = item.Id })" class="btn btn-outline-warning">Unhide</a>
                }
                <a asp-controller="Lists" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
            </div>
        </li>
    }
</ol> 
<div class="pagination">
<div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true"
     page-class="btn" page-class-normal="btn-outline-dark"
     page-class-selected="btn-primary" class="btn-group pull-right m-1">
</div>
</div>


